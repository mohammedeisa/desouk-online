<?php
/**
 * This file is part of the <name> project.
 *
 * (c) <yourname> <youremail>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Application\Sonata\UserBundle\Entity;

use Sonata\UserBundle\Entity\BaseUser as BaseUser;
use Doctrine\ORM\Mapping as ORM;

/**
 * This file has been generated by the Sonata EasyExtends bundle ( http://sonata-project.org/easy-extends )
 *
 * References :
 *   working with object : http://www.doctrine-project.org/projects/orm/2.0/docs/reference/working-with-objects/en
 *
 * @author <yourname> <youremail>
 */

/**
 * @ORM\Entity
 * @ORM\Table(name="fos_user_user")
 */
class User extends BaseUser
{


    /**
     * @var integer
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    protected $id;


    /**
     * @ORM\OneToMany(targetEntity="DesoukOnline\VendorBundle\Entity\Vendor", mappedBy="user", cascade={ "all"}, orphanRemoval=true)
     */
    protected $vendors;

    /**
     * @ORM\OneToMany(targetEntity="DesoukOnline\DeliveryBundle\Entity\Delivery", mappedBy="user", cascade={ "all"}, orphanRemoval=true)
     */
    protected $deliveries;


    /**
     * Get id
     *
     * @return integer $id
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * @param mixed $objects
     */
    public function setVendors($objects)
    {
        $this->vendors = new ArrayCollection();
        foreach ($objects as $object) {
            $object->setUser($this);
            $this->addVendors($object);
        }
    }

    public function addVendors($object)
    {
        $this->vendors[] = $object;
        return $this;
    }

    /**
     * Remove Menu
     *
     * @param StudentSessions $object
     */
    public function removeVendors($object)
    {
        $this->vendors->removeElement($object);
    }


    /**
     * @return mixed
     */
    public function getVendors()
    {
        return $this->vendors;
    }


    /**
     * @param mixed $objects
     */
    public function setDeliveries($objects)
    {
        $this->deliveries = new ArrayCollection();
        foreach ($objects as $object) {
            $object->setUser($this);
            $this->addDeliveries($object);
        }
    }

    public function addDeliveries($object)
    {
        $this->deliveries[] = $object;
        return $this;
    }

    /**
     * Remove Menu
     *
     * @param StudentSessions $object
     */
    public function removeDeliveries($object)
    {
        $this->deliveries->removeElement($object);
    }


    /**
     * @return mixed
     */
    public function getDeliveries()
    {
        return $this->deliveries;
    }


}